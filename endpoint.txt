Automated JS Endpoint Extraction and Verification with HTTPX and GAU
katana u target.com-d 5-jc | grep '\.jss tee alljs.txt

cat alljs.txt | uro | sortu | httpx-mc 200-o target name.com
cat target name.com | Jsleaks-s-1-k
cat target name.com | nuclei -t /nuclei-templates/http/exposures -c 30
cat target name.com | grep -r -E 'aws access key | aws secret key | api key | passwd | pwd | heroku | slack | firebase | swagger | aws secret_key | aws key password ftp passwd | jdbe | db | sql | secret jet | config | admin | pwd | json | gcp | htaccess env | ssh key | get access key | secret token | oauth token | oauth_token_secret
cat target name.com | xargs -I() bash -c 'echo -e "\ntarget: {}\n" && python3 lazyegg.py "("js_urls-domains --ips --leaked creds-local storage
echo "target.com" | gau-blacklist jpg.jpeg.gif,css,tif, tiff,png,ttf,woff, woff2, ico,pdf, svg | grep -E "\.js($\?.*)" | httpx-er "(?:(https?|ftp|git|ssh|telnet|smtp|imap|pop3|ldap|sftp|smb|nfs|rtmp|rtsp|ws|wss|irc|news|gopher|rsync|data):\/\ /)[^\s\*\*\(\)();\\\^\\/\\?#]+(?:\?[^\s\*/\\?#]+)?(?:\/[^\s\**/\\78]+)** \-json -mr "application/javascript|text/javascript" | jqr.extracts[]' | tr -d [].'